{"version":3,"sources":["SocketContext.js","components/VideoPlayer.jsx","components/Notifications.jsx","components/Options.jsx","App.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","children","useState","stream","setStream","me","setMe","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivedCall","Provider","value","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","leaveCall","destroy","window","location","reload","answerCall","to","useStyles","makeStyles","theme","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","border","margin","VideoPlayer","useContext","classes","Grid","container","className","Paper","item","xs","md","Typography","variant","gutterBottom","playsInline","muted","ref","autoPlay","Notifications","style","display","Button","varient","color","onClick","root","marginTop","Options","idToCall","setIdToCall","Container","elevation","noValidate","autoComplete","TextField","label","onChange","e","target","fullWidth","console","log","text","startIcon","Assignment","fontSize","PhoneDisabled","Phone","appBar","borderRadius","alignItems","image","marginLeft","wrapper","App","AppBar","position","align","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76c27713.chunk.js","sourcesContent":["import React , { createContext, useState, useRef, useEffect} from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nconst SocketContext = createContext();\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst ContextProvider = ({children }) => {\r\n    const [stream, setStream] = useState(null);\r\n    const [me,setMe] = useState('');\r\n    const [call, setCall] = useState({});\r\n    const [callAccepted, setCallAccepted] = useState(false);\r\n    const [callEnded,setCallEnded] = useState(false);\r\n    const [name,setName] = useState('');\r\n\r\n    const myVideo = useRef();\r\n    const userVideo = useRef();\r\n    const connectionRef = useRef();\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ video:true, audio:true })\r\n           .then((currentStream) => {\r\n               setStream(currentStream);\r\n\r\n               myVideo.current.srcObject = currentStream;\r\n           });\r\n        socket.on('me',(id) => setMe(id));\r\n\r\n        socket.on('calluser' , ({ from, name:callerName, signal }) => {\r\n            setCall ({isReceivedCall:true, from, name:callerName, signal });\r\n        });\r\n    }, []);\r\n\r\n    const answerCall = () => {\r\n        setCallAccepted(true);\r\n\r\n        const peer = new Peer({initiator:false,trickle:false,stream});\r\n\r\n        peer.on('signal',(data) => {\r\n            socket.emit('answercall',{ signal:data, to:call.from});\r\n        });\r\n\r\n        peer.on('stream',(currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n        peer.signal(call.signal);\r\n\r\n        connectionRef.current = peer;\r\n\r\n    }\r\n    const callUser = (id) => {\r\n        const peer = new Peer({initiator:true,trickle:false,stream});\r\n\r\n        peer.on('signal',(data) => {\r\n            socket.emit('calluser',{ userToCall:id, signalData:data, from:me,name});\r\n        });\r\n\r\n        peer.on('stream',(currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        socket.on('callaccepted',(signal) => {\r\n            setCallAccepted(true);\r\n\r\n            peer.signal(signal);\r\n\r\n        });\r\n        \r\n        connectionRef.current=peer;\r\n    };\r\n    const leaveCall = () => {\r\n        setCallEnded(true);\r\n\r\n        connectionRef.current.destroy();\r\n\r\n        window.location.reload();\r\n    };\r\n\r\n    return (\r\n        <SocketContext.Provider value={{call,callAccepted,myVideo,userVideo,stream,name,setName,callEnded,me,callUser,leaveCall,answerCall,}}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    );\r\n};\r\n\r\nexport { ContextProvider,SocketContext };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { Grid, Typography, Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { SocketContext } from \"../SocketContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  video: {\r\n    width: \"550px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"300px\",\r\n    },\r\n  },\r\n  gridContainer: {\r\n    justifyContent: \"center\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  paper: {\r\n    padding: \"10px\",\r\n    border: \"2px solid black\",\r\n    margin: \"10px\",\r\n  },\r\n}));\r\n\r\nconst VideoPlayer = () => {\r\n  const { name, callAccepted, myVideo, userVideo, callEnded, stream, call } =\r\n    useContext(SocketContext);\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container className={classes.gridContainer}>\r\n      {/*Our own video */}\r\n\r\n      {stream && (\r\n        <Paper className={classes.paper}>\r\n          <Grid item xs={12} md={6}>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              {name || \"Name\"}\r\n            </Typography>\r\n            <video\r\n              playsInline\r\n              muted\r\n              ref={myVideo}\r\n              autoPlay\r\n              className={classes.video}\r\n            />\r\n          </Grid>\r\n        </Paper>\r\n      )}\r\n      {/* User's video*/}\r\n      {callAccepted && !callEnded && (\r\n        <Paper className={classes.paper}>\r\n          <Grid item xs={12} md={6}>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              {call.name || \"Name\"}\r\n            </Typography>\r\n            <video\r\n              playsInline\r\n              ref={userVideo}\r\n              autoPlay\r\n              className={classes.video}\r\n            />\r\n          </Grid>\r\n        </Paper>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;\r\n","import React, {useContext} from 'react';\r\nimport {Button } from '@material-ui/core';\r\n\r\nimport {SocketContext} from '../SocketContext';\r\nconst Notifications = () => {\r\n    const { answerCall ,call,callAccepted} = useContext(SocketContext);\r\n\r\n    return (\r\n       <>\r\n         {call.isReceivedCall && !callAccepted && (\r\n             <div style={{display: 'flex',justifyContent: 'space-around'}}>\r\n                 <h1>{call.name} is calling:</h1>\r\n                 <Button varient=\"contained\" color=\"primary\" onClick={answerCall}>\r\n                     Answer\r\n                 </Button>\r\n             </div>\r\n         )}\r\n       </>\r\n    );\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport { Assignment, Phone, PhoneDisabled } from \"@material-ui/icons\";\r\n\r\nimport { SocketContext } from \"../SocketContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  gridContainer: {\r\n    width: \"100%\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  container: {\r\n    width: \"600px\",\r\n    margin: \"35px 0\",\r\n    padding: 0,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"80%\",\r\n    },\r\n  },\r\n  margin: {\r\n    marginTop: 20,\r\n  },\r\n  padding: {\r\n    padding: 20,\r\n  },\r\n  paper: {\r\n    padding: \"10px 20px\",\r\n    border: \"2px solid black\",\r\n  },\r\n}));\r\n\r\nconst Options = ({ children }) => {\r\n  const { me, callAccepted, name, setName, callEnded, leaveCall, callUser } =\r\n    useContext(SocketContext);\r\n  const [idToCall, setIdToCall] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.container}>\r\n      <Paper elevation={10} className={classes.paper}>\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n          <Grid container className={classes.gridContainer}>\r\n            <Grid item xs={12} md={6} className={classes.padding}>\r\n              <Typography gutterBottom varient=\"h6\">\r\n                Account Info\r\n              </Typography>\r\n              <TextField\r\n                label=\"Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                fullWidth\r\n              />\r\n              {console.log(me)}\r\n              <CopyToClipboard text={me} className={classes.margin}>\r\n                <Button\r\n                  varient=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  startIcon={<Assignment fontSize=\"large\" />}\r\n                >\r\n                  Copy Your ID\r\n                </Button>\r\n              </CopyToClipboard>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} className={classes.padding}>\r\n              <Typography gutterBottom varient=\"h6\">\r\n                Make a call\r\n              </Typography>\r\n              <TextField\r\n                label=\"ID to Call\"\r\n                value={idToCall}\r\n                onChange={(e) => setIdToCall(e.target.value)}\r\n                fullWidth\r\n              />\r\n              {callAccepted && !callEnded ? (\r\n                <Button\r\n                  varient=\"contained\"\r\n                  color=\"secondary\"\r\n                  startIcon={<PhoneDisabled fontSize=\"large\" />}\r\n                  fullWidth\r\n                  onClick={leaveCall}\r\n                  className={classes.margin}\r\n                >\r\n                  Hang Up\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  varient=\"contained\"\r\n                  color=\"primary\"\r\n                  startIcon={<Phone fontSize=\"large\" />}\r\n                  fullWidth\r\n                  onClick={() => callUser(idToCall)}\r\n                  className={classes.margin}\r\n                >\r\n                  Call\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        {children}\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","import React from 'react'\r\nimport {Typography, AppBar} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport VideoPlayer from './components/VideoPlayer';\r\nimport Notifications from './components/Notifications';\r\nimport Options from './components/Options';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        borderRadius: 15,\r\n        margin: '30px 100px',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '600px',\r\n        border: '2px solid black',\r\n    \r\n        [theme.breakpoints.down('xs')]: {\r\n          width: '90%',\r\n        },\r\n      },\r\n      image: {\r\n        marginLeft: '15px',\r\n      },\r\n      wrapper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n      },\r\n}));\r\nconst App = () => {\r\n    const classes=useStyles();\r\n    return (\r\n        <div className= {classes.wrapper}>\r\n          <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n              <Typography variant=\"h4\" align=\"center\">Video Calling Application</Typography>\r\n          </AppBar>\r\n          <VideoPlayer />\r\n          <Options>\r\n            <Notifications />\r\n          </Options>\r\n          \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport { ContextProvider } from './SocketContext';\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n    <ContextProvider>\r\n       <App />\r\n    </ContextProvider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}